-- TABELAS PRINCIPAIS
CREATE TABLE TB_ATIVIDADE (
    ID_ATIVIDADE SERIAL PRIMARY KEY,
    DS_TITULO VARCHAR(100) NOT NULL,
    DT_INICIO TIMESTAMP NOT NULL,
    DT_FIM TIMESTAMP NOT NULL,
    TP_ATIVIDADE VARCHAR(30) CHECK (TP_ATIVIDADE IN ('MINICURSO','WORKSHOP','PALESTRA','EVENTO')),
    DS_LOCAL VARCHAR(100)
);

CREATE TABLE TB_PARTICIPANTE (
    ID_PARTICIPANTE SERIAL PRIMARY KEY,
    NM_PARTICIPANTE VARCHAR(100) NOT NULL,
    DS_EMAIL VARCHAR(100) NOT NULL UNIQUE,
    TP_CATEGORIA VARCHAR(20) CHECK (TP_CATEGORIA IN ('ALUNO','PROFESSOR','COMUNIDADE','OUTROS'))
);

CREATE TABLE TB_INSTRUTOR (
    ID_INSTRUTOR SERIAL PRIMARY KEY,
    NM_INSTRUTOR VARCHAR(100) NOT NULL,
    DS_AFILIACAO VARCHAR(100),
    DS_ESPECIALIDADE VARCHAR(100)
);

-- TABELAS SECUND√ÅRIAS
CREATE TABLE TB_CERTIFICADO (
    ID_CERTIFICADO SERIAL PRIMARY KEY,
    CD_HASH VARCHAR(64) NOT NULL UNIQUE,
    DT_EMISSAO DATE NOT NULL,
    ID_ATIVIDADE INTEGER REFERENCES TB_ATIVIDADE(ID_ATIVIDADE),
    ID_PARTICIPANTE INTEGER REFERENCES TB_PARTICIPANTE(ID_PARTICIPANTE)
);

CREATE TABLE TB_PARCEIRO (
    ID_PARCEIRO SERIAL PRIMARY KEY,
    NM_PARCEIRO VARCHAR(100) NOT NULL,
    TP_PARCEIRO VARCHAR(30) CHECK (TP_PARCEIRO IN ('PATROCINADOR','APOIADOR','REALIZADOR')),
    VL_CONTRIBUICAO DECIMAL(10,2)
);

CREATE TABLE TB_FEEDBACK (
    ID_FEEDBACK SERIAL PRIMARY KEY,
    VL_NOTA INTEGER NOT NULL CHECK (VL_NOTA BETWEEN 1 AND 5),
    DS_COMENTARIO TEXT,
    ID_ATIVIDADE INTEGER REFERENCES TB_ATIVIDADE(ID_ATIVIDADE),
    ID_PARTICIPANTE INTEGER REFERENCES TB_PARTICIPANTE(ID_PARTICIPANTE)
);

-- TABELAS ASSOCIATIVAS
CREATE TABLE RL_ATIVIDADE_INSTRUTOR (
    ID_ATIVIDADE INTEGER REFERENCES TB_ATIVIDADE(ID_ATIVIDADE),
    ID_INSTRUTOR INTEGER REFERENCES TB_INSTRUTOR(ID_INSTRUTOR),
    TP_PAPEL VARCHAR(30),
    PRIMARY KEY (ID_ATIVIDADE, ID_INSTRUTOR)
);

CREATE TABLE RL_ATIVIDADE_PARCEIRO (
    ID_ATIVIDADE INTEGER REFERENCES TB_ATIVIDADE(ID_ATIVIDADE),
    ID_PARCEIRO INTEGER REFERENCES TB_PARCEIRO(ID_PARCEIRO),
    VL_CONTRIBUICAO DECIMAL(10,2),
    PRIMARY KEY (ID_ATIVIDADE, ID_PARCEIRO)
);

CREATE TABLE RL_ATIVIDADE_PARTICIPANTE (
    ID_ATIVIDADE INTEGER NOT NULL REFERENCES TB_ATIVIDADE(ID_ATIVIDADE),
    ID_PARTICIPANTE INTEGER NOT NULL REFERENCES TB_PARTICIPANTE(ID_PARTICIPANTE),
    DT_INSCRICAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ST_PRESENCA BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (ID_ATIVIDADE, ID_PARTICIPANTE)
);